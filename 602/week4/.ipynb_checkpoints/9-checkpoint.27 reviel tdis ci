```{r}
#example 1
ntimes = 1000
nsize = 16
dvecmeans = numeric(ntimes)
dvecvars = numeric(ntimes)
water = c(5.4,5.4,5.6,4.2,4.7,5.3,4.4,4.9,5.2,5.9,4.7,4.9,4.8,4.9,5.0,5.5)

for(i in 1:ntimes){
  datavec = sample(water, nsize, replace = TRUE)
  dvecmeans[i] = mean(datavec)
  dvecvars[i] = var(datavec)
}

bs = data.frame(dvecmeans,dvecvars)
head(bs,10)

```


```{r}
quantile(dvecvars,c(0.025,0.975))
qdata(~dvecvars,c(0.025,0.975), data =bs)
#same thing
#in conclution
#0.08857604 < var < 0.31586667 
#we can just do
# sqrt(0.08857) < segam = sqrt(var) < sqrt(0.31587)

```
```{r}
userofmari = c(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0) # creates a vector of 0s and 1s from the studentsuvery data frame
#
table(userofmari)
```
```{r}
vecphats <- numeric(length(userofmari))
for(i in 1:1000){
      temp.data <- sample(userofmari, length(userofmari), replace=TRUE) #could have used resample(userofmari) here
      vecphats[i] <- mean(temp.data)
}
boot_phat.df <- data.frame(vecphats)
head(boot_phat.df, 4)
```
```{r}
ggplot(boot_phat.df, aes(x = vecphats)) + geom_histogram(col="green", fill="sky blue", binwidth=0.01) + xlab("Values of the Sample Proportion") + ylab("Count") + ggtitle("Histogram: Distribution of Bootstrap Sample Proportion") + geom_vline(xintercept = 0.2278, col="orange")
```
```{r}
qdata(~vecphats, c(0.025, 0.975), data=boot_phat.df)
#From this result, we can be 95% confident that the population proportion is somewhere between 0.1376 and 0.2936.
```
```{r}
senhc = c(rep(0, 0.51*500), rep(1, 0.49*500))  #combines two vectors, one with 255 0s and another with 245 1s.
head(senhc, 4)  #looks at the first four data values...all will be 0s...
length(senhc)
table(senhc)
```

```{r}
senhcphats <- numeric(length(senhc))
for(i in 1:1000){
      this.data <- sample(senhc, length(senhc), replace=TRUE) #could have used resample(userofmari) here
      senhcphats[i] <- mean(this.data)
}
boot_phatexe1.df <- data.frame(senhcphats)
head(boot_phatexe1.df, 4)
```
```{r}
qdata(~vecphats, c(0.005, 0.995), data=boot_phatexe1.df)

```

```{r}
ggplot(boot_phatexe1.df, aes(x = senhcphats)) + geom_histogram(col="green", fill="sky blue", binwidth=0.01) + xlab("Values of the Sample Proportion") + ylab("Count") + ggtitle("Histogram: Distribution of Bootstrap Sample Proportion") + geom_vline(xintercept = 0.49, col="orange")
```
```{r}
exe1 = c(198.58,187.49,174.77,178.86,177.03,159.43,178.94,150.52,157.48,176.24,162.88,153.58,170.91,185.79,182.03)
mean(exe1)
```
```{r}
uselectiondata <- read.csv("http://people.ucalgary.ca/~jbstall/DataFiles/USElectionData2016.csv") #reads in the data in the USElectionData2016.csv file
names(uselectiondata) #provides column/variable names
dim(uselectiondata)
```
```{r}
counties.sampled <- sample(uselectiondata, 50, replace=FALSE) #do not need the is.na argument here to skip over all missing data points...
head(counties.sampled,4)

#uselectiondata[sample(nrow(usekectuondata),50,replace=False),]
```


```{r}
#t.test(~billamount, data=waterbill, conf.level=0.95)$conf #indexes the 4th position in the output array

medianearning2010 = uselectiondata$Median.Earnings.2010
#t.test(~Median.Earnings.2010, data=counties.sampled)$conf
t.test(~Median.Earnings.2010, data=counties.sampled)

```
```{r}
ggplot(data=counties.sampled, aes(sample=Median.Earnings.2010)) + stat_qq(col='blue') + stat_qqline(col='red') + ggtitle("Normal Probability Plot of Monthly Water Bill") #defaults are a Normal distribution

```


